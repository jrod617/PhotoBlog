# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone
import django.core.validators
import django.contrib.auth.models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChasinViewsUser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(null=True, verbose_name='last login', blank=True)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=30, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', unique=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name', blank=True)),
                ('last_name', models.CharField(max_length=30, verbose_name='last name', blank=True)),
                ('email', models.EmailField(max_length=254, verbose_name='email address', blank=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.BooleanField(default=1, choices=[(0, 'Male'), (1, 'Female')])),
                ('birth_date', models.DateField(default=django.utils.timezone.now, verbose_name='Birth Date', blank=True)),
                ('state', models.CharField(default=b'AL', max_length=2, choices=[(b'AL', b'Alabama'), (b'AK', b'Alaska'), (b'AZ', b'Arizona'), (b'AR', b'Arkansas'), (b'CA', b'California'), (b'CO', b'Colorado'), (b'CT', b'Connecticut'), (b'DE', b'Delaware'), (b'FL', b'Florida'), (b'GA', b'Georgia'), (b'HI', b'Hawaii'), (b'ID', b'Idaho'), (b'IL', b'Illinois'), (b'IN', b'Indiana'), (b'IA', b'Iowa'), (b'KS', b'Kansas'), (b'KY', b'Kentucky'), (b'LA', b'Louisiana'), (b'ME', b'Maine'), (b'MD', b'Maryland'), (b'MA', b'Massachusetts'), (b'MI', b'Michigan'), (b'MN', b'Minnesota'), (b'MS', b'Mississippi'), (b'MO', b'Missouri'), (b'MT', b'Montana'), (b'NE', b'Nebraska'), (b'NV', b'Nevada'), (b'NH', b'New Hampshire'), (b'NJ', b'New Jersey'), (b'NM', b'New Mexico'), (b'NY', b'New York'), (b'NC', b'North Carolina'), (b'ND', b'North Dakota'), (b'OH', b'Ohio'), (b'OK', b'Oklahoma'), (b'OR', b'Oregon'), (b'PA', b'Pennsylvania'), (b'RI', b'Rhode Island'), (b'SC', b'South Carolina'), (b'SD', b'South Dakota'), (b'TN', b'Tennessee'), (b'TX', b'Texas'), (b'UT', b'Utah'), (b'VT', b'Vermont'), (b'VA', b'Virginia'), (b'WA', b'Washington'), (b'WV', b'West Virginia'), (b'WI', b'Wisconsin'), (b'WY', b'Wyoming'), (b'AS', b'American Samoa'), (b'DC', b'District of Columbia'), (b'FM', b'Federated States of Micronesia'), (b'GU', b'Guam'), (b'MH', b'Marshall Islands'), (b'MP', b'Northern Mariana Islands'), (b'PW', b'Palau'), (b'PR', b'Puerto Rico'), (b'VI', b'Virgin Islands')])),
                ('city', models.CharField(default=b'', max_length=250)),
                ('countryOfOrigin', models.CharField(default=b'US', max_length=3, choices=[(b'US', 'UNITED STATES OF AMERICA'), (b'AF', 'AFGHANISTAN'), (b'AL', 'ALBANIA'), (b'DZ', 'ALGERIA'), (b'AS', 'AMERICAN SAMOA'), (b'AD', 'ANDORRA'), (b'AO', 'ANGOLA'), (b'AI', 'ANGUILLA'), (b'AQ', 'ANTARCTICA'), (b'AG', 'ANTIGUA AND BARBUDA'), (b'AR', 'ARGENTINA'), (b'AM', 'ARMENIA'), (b'AW', 'ARUBA'), (b'AU', 'AUSTRALIA'), (b'AT', 'AUSTRIA'), (b'AZ', 'AZERBAIJAN'), (b'BS', 'BAHAMAS'), (b'BH', 'BAHRAIN'), (b'BD', 'BANGLADESH'), (b'BB', 'BARBADOS'), (b'BY', 'BELARUS'), (b'BE', 'BELGIUM'), (b'BZ', 'BELIZE'), (b'BJ', 'BENIN'), (b'BM', 'BERMUDA'), (b'BT', 'BHUTAN'), (b'BO', 'BOLIVIA'), (b'BQ', 'BONAIRE SINT EUSTATIUS AND SABA'), (b'BA', 'BOSNIA HERCEGOVINA'), (b'BW', 'BOTSWANA'), (b'BV', 'BOUVET ISLAND'), (b'BR', 'BRAZIL'), (b'IO', 'BRITISH INDIAN OCEAN TERRITORY'), (b'BN', 'BRUNEI DARUSSALAM'), (b'BG', 'BULGARIA'), (b'BF', 'BURKINA FASO'), (b'BI', 'BURUNDI'), (b'KH', 'CAMBODIA'), (b'CM', 'CAMEROON'), (b'CA', 'CANADA'), (b'IC', 'CANARY ISLANDS'), (b'CV', 'CAPE VERDE'), (b'KY', 'CAYMAN ISLANDS'), (b'CF', 'CENTRAL AFRICAN REPUBLIC'), (b'EA', 'CEUTA AND MELILLA'), (b'TD', 'CHAD'), (b'CL', 'CHILE'), (b'CN', 'CHINA'), (b'CX', 'CHRISTMAS ISLAND'), (b'CC', 'COCOS (KEELING) ISLANDS'), (b'CO', 'COLOMBIA'), (b'KM', 'COMOROS'), (b'CG', 'CONGO'), (b'CD', 'CONGO THE DEMOCRATIC REPUBLIC OF THE'), (b'CK', 'COOK ISLANDS'), (b'CR', 'COSTA RICA'), (b'HR', 'CROATIA'), (b'CW', 'CURACAO'), (b'CY', 'CYPRUS'), (b'CZ', 'CZECH REPUBLIC'), (b'CI', 'COTE DIVOIRE (IVORY COAST)'), (b'DK', 'DENMARK'), (b'DJ', 'DJIBOUTI'), (b'DM', 'DOMINICA'), (b'DO', 'DOMINICAN REPUBLIC'), (b'EC', 'ECUADOR'), (b'EG', 'EGYPT'), (b'SV', 'EL SALVADOR'), (b'GQ', 'EQUATORIAL GUINEA'), (b'ER', 'ERITREA'), (b'EE', 'ESTONIA'), (b'ET', 'ETHIOPIA'), (b'FK', 'FALKLAND ISLANDS'), (b'FO', 'FAROE ISLANDS'), (b'FJ', 'FIJI'), (b'FI', 'FINLAND'), (b'FR', 'FRANCE'), (b'GF', 'FRENCH GUIANA'), (b'PF', 'FRENCH POLYNESIA'), (b'TF', 'FRENCH SOUTHERN TERRITORIES'), (b'GA', 'GABON'), (b'GM', 'GAMBIA'), (b'GE', 'GEORGIA'), (b'DE', 'GERMANY'), (b'GH', 'GHANA'), (b'GI', 'GIBRALTAR'), (b'GR', 'GREECE'), (b'GL', 'GREENLAND'), (b'GD', 'GRENADA'), (b'GP', 'GUADELOUPE'), (b'GU', 'GUAM'), (b'GT', 'GUATEMALA'), (b'GG', 'GUERNSEY'), (b'GN', 'GUINEA'), (b'GW', 'GUINEA-BISSAU'), (b'GY', 'GUYANA'), (b'HT', 'HAITI'), (b'HM', 'HEARD AND MCDONALD ISLANDS'), (b'HN', 'HONDURAS'), (b'HK', 'HONG KONG'), (b'HU', 'HUNGARY'), (b'IS', 'ICELAND'), (b'IN', 'INDIA'), (b'ID', 'INDONESIA'), (b'IQ', 'IRAQ'), (b'IE', 'IRELAND'), (b'IM', 'ISLE OF MAN'), (b'IL', 'ISRAEL'), (b'IT', 'ITALY'), (b'JM', 'JAMAICA'), (b'JP', 'JAPAN'), (b'JE', 'JERSEY'), (b'JO', 'JORDAN'), (b'KZ', 'KAZAKHSTAN'), (b'KE', 'KENYA'), (b'KI', 'KIRIBATI'), (b'KW', 'KUWAIT'), (b'KG', 'KYRGYZSTAN'), (b'LA', 'LAOS'), (b'LV', 'LATVIA'), (b'LB', 'LEBANON'), (b'LS', 'LESOTHO'), (b'LR', 'LIBERIA'), (b'LY', 'LIBYA'), (b'LI', 'LICHTENSTEIN'), (b'LT', 'LITHUANIA'), (b'LU', 'LUXEMBOURG'), (b'MO', 'MACAU'), (b'MG', 'MADAGASCAR'), (b'MW', 'MALAWI'), (b'MY', 'MALAYSIA'), (b'MV', 'MALDIVES'), (b'ML', 'MALI'), (b'MT', 'MALTA'), (b'MH', 'MARSHALL ISLANDS'), (b'MQ', 'MARTINIQUE'), (b'MR', 'MAURITANIA'), (b'MU', 'MAURITIUS'), (b'YT', 'MAYOTTE'), (b'MX', 'MEXICO'), (b'FM', 'MICRONESIA'), (b'MD', 'MOLDOVA'), (b'MC', 'MONACO'), (b'MN', 'MONGOLIA'), (b'ME', 'MONTENEGRO'), (b'MS', 'MONTSERRAT'), (b'MA', 'MOROCCO'), (b'MZ', 'MOZAMBIQUE'), (b'NA', 'NAMIBIA'), (b'NR', 'NAURU'), (b'NP', 'NEPAL'), (b'NL', 'NETHERLANDS'), (b'AN', 'NETHERLANDS ANTILLES'), (b'NC', 'NEW CALEDONIA'), (b'NZ', 'NEW ZEALAND'), (b'NI', 'NICARAGUA'), (b'NE', 'NIGER'), (b'NG', 'NIGERIA'), (b'NU', 'NIUE'), (b'NF', 'NORFOLK ISLAND'), (b'MP', 'NORTHERN MARIANA ISLANDS'), (b'NO', 'NORWAY'), (b'OM', 'OMAN'), (b'PK', 'PAKISTAN'), (b'PW', 'PALAU'), (b'PS', 'PALESTINIAN TERRITORIES'), (b'PA', 'PANAMA'), (b'PG', 'PAPUA NEW GUINEA'), (b'PY', 'PARAGUAY'), (b'PE', 'PERU'), (b'PH', 'PHILIPPINES'), (b'PN', 'PITCAIRN'), (b'PL', 'POLAND'), (b'PT', 'PORTUGAL'), (b'PR', 'PUERTO RICO'), (b'QA', 'QATAR'), (b'RE', 'REUNION'), (b'RO', 'ROMANIA'), (b'RU', 'RUSSIAN FEDERATION'), (b'RW', 'RWANDA'), (b'BL', 'SAINT '), (b'KN', 'SAINT KITTS AND NEVIS'), (b'LC', 'SAINT LUCIA'), (b'MF', 'SAINT MARTIN'), (b'VC', 'SAINT VINCENT AND THE GRENADINES'), (b'WS', 'SAMOA'), (b'SM', 'SAN MARINO'), (b'ST', 'SAO TOME AND PRINCIPE'), (b'SA', 'SAUDI ARABIA'), (b'SN', 'SENEGAL'), (b'RS', 'SERBIA'), (b'SC', 'SEYCHELLES'), (b'SL', 'SIERRA LEONE'), (b'SG', 'SINGAPORE'), (b'SX', 'SINT MAARTEN'), (b'SK', 'SLOVAKIA (SLOVAK REPUBLIC)'), (b'SI', 'SLOVENIA'), (b'SB', 'SOLOMON ISLANDS'), (b'SO', 'SOMALIA'), (b'ZA', 'SOUTH AFRICA'), (b'KR', 'SOUTH KOREA'), (b'ES', 'SPAIN'), (b'LK', 'SRI LANKA'), (b'SH', 'ST. HELENA'), (b'PM', 'ST. PIERRE AND MIQUELON'), (b'SR', 'SURINAME'), (b'SJ', 'SVALBARD AND JAN MAYEN ISLANDS'), (b'SZ', 'SWAZILAND'), (b'SE', 'SWEDEN'), (b'CH', 'SWITZERLAND'), (b'TW', 'TAIWAN'), (b'TJ', 'TAJIKISTAN'), (b'TZ', 'TANZANIA'), (b'TH', 'THAILAND'), (b'TL', 'TIMOR-LESTE'), (b'TG', 'TOGO'), (b'TK', 'TOKELAU'), (b'TO', 'TONGA'), (b'TT', 'TRINIDAD AND TOBAGO'), (b'TN', 'TUNISIA'), (b'TR', 'TURKEY'), (b'TM', 'TURKMENISTAN'), (b'TC', 'TURKS AND CAICOS ISLANDS'), (b'TV', 'TUVALU'), (b'UG', 'UGANDA'), (b'UA', 'UKRAINE'), (b'AE', 'UNITED ARAB EMIRATES'), (b'GB', 'UNITED KINGDOM (GREAT BRITAIN)'), (b'UM', 'UNITED STATES MINOR ISLANDS'), (b'UY', 'URUGUAY'), (b'UZ', 'UZBEKISTAN'), (b'VU', 'VANUATU'), (b'VA', 'VATICAN CITY'), (b'VE', 'VENEZUELA'), (b'VN', 'VIETNAM'), (b'VG', 'VIRGIN ISLANDS (BRITISH)'), (b'VI', 'VIRGIN ISLANDS (USA)'), (b'WF', 'WALLIS AND FUTUNA'), (b'EH', 'WESTERN SAHARA'), (b'YE', 'YEMEN'), (b'ZM', 'ZAMBIA'), (b'ZW', 'ZIMBABWE')])),
                ('groups', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Group', blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Permission', blank=True, help_text='Specific permissions for this user.', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'swappable': 'AUTH_USER_MODEL',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
